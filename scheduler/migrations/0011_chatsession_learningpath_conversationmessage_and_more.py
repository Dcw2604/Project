# Generated by Django 4.2.23 on 2025-08-08 13:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('scheduler', '0010_rename_selection_rules_text_exam_selection_rules'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_type', models.CharField(choices=[('exam_chat', 'Exam Chat'), ('interactive_learning', 'Interactive Learning'), ('topic_exploration', 'Topic Exploration')], default='interactive_learning', max_length=20)),
                ('topic', models.CharField(help_text='Main topic being explored', max_length=200)),
                ('subject', models.CharField(default='math', max_length=100)),
                ('learning_goal', models.TextField(help_text='What the student should discover/understand')),
                ('current_understanding_level', models.IntegerField(default=0, help_text='0-100 scale of understanding')),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('paused', 'Paused'), ('abandoned', 'Abandoned')], default='active', max_length=15)),
                ('total_messages', models.IntegerField(default=0)),
                ('discoveries_made', models.IntegerField(default=0, help_text="Number of 'aha' moments detected")),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('engagement_score', models.FloatField(default=0.0, help_text='0-1 scale of student engagement')),
                ('confusion_indicators', models.IntegerField(default=0, help_text='Count of confusion signals')),
                ('breakthrough_moments', models.IntegerField(default=0, help_text='Major understanding breakthroughs')),
                ('current_question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='scheduler.questionbank')),
                ('exam', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='scheduler.exam')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='LearningPath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(default='math', max_length=100)),
                ('current_topic', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('suggested', 'Suggested'), ('active', 'Active'), ('completed', 'Completed'), ('modified', 'Modified')], default='suggested', max_length=15)),
                ('topics_sequence', models.TextField(help_text='JSON list of topics in learning order')),
                ('current_position', models.IntegerField(default=0, help_text='Current position in sequence')),
                ('student_strengths', models.TextField(blank=True, help_text='JSON list of identified strengths')),
                ('areas_for_growth', models.TextField(blank=True, help_text='JSON list of areas needing work')),
                ('learning_preferences', models.TextField(blank=True, help_text='JSON learning style preferences')),
                ('milestones_achieved', models.TextField(blank=True, help_text='JSON list of completed milestones')),
                ('estimated_completion', models.DateField(blank=True, null=True)),
                ('actual_progress_percent', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('chat_sessions', models.ManyToManyField(blank=True, related_name='learning_paths', to='scheduler.chatsession')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_paths', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_updated'],
            },
        ),
        migrations.CreateModel(
            name='ConversationMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('student_question', 'Student Question'), ('student_answer', 'Student Answer'), ('ai_guidance', 'AI Guidance'), ('ai_question', 'AI Question'), ('hint', 'Hint'), ('encouragement', 'Encouragement')], max_length=20)),
                ('content', models.TextField()),
                ('sender', models.CharField(choices=[('student', 'Student'), ('ai', 'AI')], max_length=10)),
                ('sentiment_score', models.FloatField(blank=True, help_text='TextBlob sentiment: -1 to 1', null=True)),
                ('understanding_level', models.CharField(blank=True, choices=[('confused', 'Confused'), ('partial', 'Partial Understanding'), ('good', 'Good Understanding'), ('mastery', 'Mastery')], max_length=15, null=True)),
                ('contains_question', models.BooleanField(default=False)),
                ('shows_confusion', models.BooleanField(default=False)),
                ('shows_discovery', models.BooleanField(default=False)),
                ('led_to_discovery', models.BooleanField(default=False, help_text='Did this AI message lead to student discovery?')),
                ('hint_level', models.IntegerField(blank=True, help_text='1-5 scale, 1=gentle nudge, 5=direct guidance', null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('chat_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='scheduler.chatsession')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ConversationInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insight_type', models.CharField(choices=[('breakthrough', 'Learning Breakthrough'), ('confusion_pattern', 'Confusion Pattern'), ('engagement_change', 'Engagement Change'), ('topic_mastery', 'Topic Mastery'), ('learning_style', 'Learning Style Indicator')], max_length=20)),
                ('description', models.TextField(help_text='What was observed/discovered')),
                ('confidence_score', models.FloatField(help_text='0-1 confidence in this insight')),
                ('recommendation', models.TextField(blank=True, help_text='What should happen next based on this insight')),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
                ('chat_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insights', to='scheduler.chatsession')),
                ('trigger_messages', models.ManyToManyField(blank=True, to='scheduler.conversationmessage')),
            ],
            options={
                'ordering': ['-detected_at'],
            },
        ),
    ]
