# Generated by Django 4.2.23 on 2025-08-09 07:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('scheduler', '0011_chatsession_learningpath_conversationmessage_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdaptiveDifficultyTracker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(help_text='Specific topic being learned', max_length=200)),
                ('subject', models.CharField(default='math', max_length=100)),
                ('current_difficulty', models.IntegerField(choices=[(1, 'Level 1 - Foundation'), (2, 'Level 2 - Basic'), (3, 'Level 3 - Intermediate'), (4, 'Level 4 - Advanced'), (5, 'Level 5 - Expert')], default=1, help_text='Current difficulty level')),
                ('target_difficulty', models.IntegerField(choices=[(1, 'Level 1 - Foundation'), (2, 'Level 2 - Basic'), (3, 'Level 3 - Intermediate'), (4, 'Level 4 - Advanced'), (5, 'Level 5 - Expert')], default=3, help_text='Target difficulty to reach')),
                ('consecutive_successes', models.IntegerField(default=0, help_text='Consecutive correct answers')),
                ('consecutive_failures', models.IntegerField(default=0, help_text='Consecutive incorrect answers')),
                ('total_attempts', models.IntegerField(default=0)),
                ('total_successes', models.IntegerField(default=0)),
                ('success_threshold_to_advance', models.IntegerField(default=2, help_text='Consecutive successes needed to advance')),
                ('failure_threshold_to_regress', models.IntegerField(default=3, help_text='Consecutive failures to regress difficulty')),
                ('min_attempts_before_advance', models.IntegerField(default=3, help_text='Minimum attempts before advancing')),
                ('confidence_score', models.FloatField(default=0.5, help_text='0-1 scale of student confidence')),
                ('mastery_percentage', models.FloatField(default=0.0, help_text='0-100 scale of topic mastery')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('chat_session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='difficulty_tracker', to='scheduler.chatsession')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='difficulty_trackers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_updated'],
                'unique_together': {('student', 'topic', 'chat_session')},
            },
        ),
        migrations.CreateModel(
            name='QuestionAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(help_text='The exact question asked')),
                ('difficulty_level', models.IntegerField(choices=[(1, 'Level 1 - Foundation'), (2, 'Level 2 - Basic'), (3, 'Level 3 - Intermediate'), (4, 'Level 4 - Advanced'), (5, 'Level 5 - Expert')])),
                ('topic', models.CharField(max_length=200)),
                ('student_answer', models.TextField()),
                ('result', models.CharField(choices=[('correct', 'Correct'), ('incorrect', 'Incorrect'), ('partial', 'Partially Correct'), ('skipped', 'Skipped')], max_length=10)),
                ('time_taken_seconds', models.IntegerField(blank=True, null=True)),
                ('hint_level_used', models.IntegerField(default=0, help_text='0-5 scale of hints needed')),
                ('confidence_before', models.FloatField(blank=True, help_text='Student confidence before attempt', null=True)),
                ('confidence_after', models.FloatField(blank=True, help_text='Student confidence after attempt', null=True)),
                ('understanding_demonstrated', models.TextField(blank=True, help_text='What understanding the student showed')),
                ('misconceptions_identified', models.TextField(blank=True, help_text='Any misconceptions detected')),
                ('attempted_at', models.DateTimeField(auto_now_add=True)),
                ('chat_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_attempts', to='scheduler.chatsession')),
                ('difficulty_tracker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='scheduler.adaptivedifficultytracker')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-attempted_at'],
            },
        ),
    ]
